/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 ./public/characters/aqua/aqua_armored.glb -T -t
Files: ./public/characters/aqua/aqua_armored.glb [166.34KB] > aqua_armored-transformed.glb [42.08KB] (75%)
Author: peedr0o0 (https://sketchfab.com/peedr0o0)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/kingdom-hearts-aqua-armored-eecf61fd593a4cdf86622717b9ab116b
Title: Kingdom Hearts - Aqua Armored
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import { useControls } from "leva";

type GLTFResult = GLTF & {
  nodes: {
    Object_2: THREE.Mesh;
  };
  materials: {
    ["710_material00"]: THREE.MeshBasicMaterial;
  };
};

type ContextType = Record<
  string,
  React.ForwardRefExoticComponent<JSX.IntrinsicElements["mesh"]>
>;

export function Aqua(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "./characters/aqua/aqua_armored-transformed.glb"
  ) as GLTFResult;
  // put 'import { useControls } from 'leva' on top of the file
  const { reflectivity, y } = useControls({ reflectivity: 0.5, y: 0 });
  console.log(materials["710_material00"]);
  materials["710_material00"].reflectivity = reflectivity;
  return (
    <group {...props} dispose={null}>
      <mesh
        geometry={nodes.Object_2.geometry}
        material={materials["710_material00"]}
        position={[-0.835, 0.895, 1.089]}
        rotation={[-Math.PI, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/aqua_armored-transformed.glb");
